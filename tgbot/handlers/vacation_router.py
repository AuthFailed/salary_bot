from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from tgbot.misc.states import VacationCountStates
from tgbot.misc.salary import vacation_pay

vacation_router = Router()


@vacation_router.callback_query(F.data == "count_vacation")
async def create_order(query: CallbackQuery, state: FSMContext):
    await query.answer(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞—Å—á–µ—Ç –æ—Ç–ø—É—Å–∫–Ω—ã—Ö!")
    await state.set_state(VacationCountStates.TOTAL_YEAR_SALARY)

    await query.message.edit_text(
        "–î–∞–≤–∞–π –ø–æ—Å—á–∏—Ç–∞–µ–º –æ—Ç–ø—É—Å–∫–Ω—ã–µ\nüí∏ –í–≤–µ–¥–∏ —Å–≤–æ—é –≥–æ–¥–æ–≤—É—é –∑–∞—Ä–ø–ª–∞—Ç—É\n–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —Å—É–º–º—É –≤—ã–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –Ω–∞ —Ä—É–∫–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤."
    )


@vacation_router.message(VacationCountStates.TOTAL_YEAR_SALARY)
async def process_total_year_salary(message: Message, state: FSMContext) -> None:
    await state.update_data(TOTAL_YEAR_SALARY=message.text)
    await state.set_state(VacationCountStates.VACATION_DAYS)

    await message.answer("üìÖ –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –∫–æ–ª-–≤–æ –¥–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞:")


@vacation_router.message(VacationCountStates.VACATION_DAYS)
async def process_coefficient(message: Message, state: FSMContext) -> None:
    await state.update_data(VACATION_DAYS=message.text)

    user_data = await state.get_data()
    vacation_payment = await vacation_pay(
        total_year_salary=float(user_data["TOTAL_YEAR_SALARY"].replace(",", ".")),
        vacation_days_count=int(user_data["VACATION_DAYS"]),
    )
    await message.answer(f"""
–°–ø–∞—Å–∏–±–æ! –í–æ—Ç —Ä–∞—Å—á–µ—Ç —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:
üí∏ <b>–ó–ü –∑–∞ –≥–æ–¥</b>: {user_data["TOTAL_YEAR_SALARY"]}
üìÖ <b>–î–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞</b>: {user_data["VACATION_DAYS"]}

–ó–∞ {user_data["VACATION_DAYS"]} –¥–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å –ø—Ä–∏–º–µ—Ä–Ω–æ {vacation_payment} —Ä—É–±""")
    await state.clear()
